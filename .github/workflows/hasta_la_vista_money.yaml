# This is a basic workflow to help you get started with Actions

name: hasta-la-vista-money

# Controls when the workflow will run
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.1
      - uses: actions/setup-python@v4.7.1
        with:
          python-version: '3.11.2'
          fetch-depth: 0


      # Runs a single command using the runners shell
      - name: Install dependencies
        run: |
          python -m pip install -r requirements/prod.txt
          python -m pip install --upgrade pip
          pip install poetry
          make install
      #run flake8 with wemake-python-styleguide
      - name: wemake-python-styleguide
        uses: wemake-services/wemake-python-styleguide@0.18.0

      # run makemigrations and migrate
      - name: Run makemigrations
        run: python manage.py makemigrations

      - name: Run check
        run: python manage.py check

      - name: Run migrations
        run: python manage.py migrate --fake

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.COVERAGE_ID_APPLICATION }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          TOKEN_TELEGRAM_BOT: ${{ secrets.TOKEN_TELEGRAM_BOT }}
          ID_GROUP_USER: ${{ secrets.ID_GROUP_USER }}
        with:
          coverageCommand: make coverage
          debug: true
