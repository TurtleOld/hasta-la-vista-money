name: hasta-la-vista-money
permissions:
  contents: read
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ 3.11, 3.12, 3.13 ]

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:8-alpine
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v5.0.0
      - uses: actions/setup-python@v6.0.0
        with:
          python-version: '3.14.0'

      - name: Install uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41
        with:
          version: "0.9.5"

      - name: Install ruff
        uses: astral-sh/ruff-action@7f084f337eb515a85dde7f5c510846041d6a3b21
        with:
          version: "0.12.8"
      - run: ruff check --fix
      - run: ruff format

      - name: Install dependencies
        run: |
          uv venv .venv && uv pip install -e '.[dev]'

      - name: Run makemigrations
        run: uv run python manage.py makemigrations
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REFRESH_TOKEN_LIFETIME: ${{ secrets.REFRESH_TOKEN_LIFETIME }}
          ACCESS_TOKEN_LIFETIME: ${{ secrets.ACCESS_TOKEN_LIFETIME }}
          REDIS_LOCATION: redis://localhost:6379/1
          GITHUB_WORKFLOW: true

      - name: Run check
        run: uv run python manage.py check
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REFRESH_TOKEN_LIFETIME: ${{ secrets.REFRESH_TOKEN_LIFETIME }}
          ACCESS_TOKEN_LIFETIME: ${{ secrets.ACCESS_TOKEN_LIFETIME }}
          REDIS_LOCATION: redis://localhost:6379/1
          GITHUB_WORKFLOW: true

      - name: Run migrations
        run: uv run python manage.py migrate
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          REFRESH_TOKEN_LIFETIME: ${{ secrets.REFRESH_TOKEN_LIFETIME }}
          ACCESS_TOKEN_LIFETIME: ${{ secrets.ACCESS_TOKEN_LIFETIME }}
          REDIS_LOCATION: redis://localhost:6379/1
          GITHUB_WORKFLOW: true

      - name: Run Tests with Coverage
        run: make coverage
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/github_actions
          REFRESH_TOKEN_LIFETIME: ${{ secrets.REFRESH_TOKEN_LIFETIME }}
          ACCESS_TOKEN_LIFETIME: ${{ secrets.ACCESS_TOKEN_LIFETIME }}
          REDIS_LOCATION: redis://localhost:6379/1
          GITHUB_WORKFLOW: true

      - name: Run codacy-coverage-reporter
        uses: codacy/codacy-coverage-reporter-action@a38818475bb21847788496e9f0fddaa4e84955ba
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: 'coverage.xml'
