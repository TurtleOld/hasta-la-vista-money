name: hlvm

services:
  db:
    container_name: hlvm_db
    image: postgres:16-alpine
    restart: always
    volumes:
      - ${LOCATION:-./app_data}/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-hlvm}
    ports:
      - "5433:5432"
    networks:
      - default

  hlvm-server:
    container_name: hlvm_server
    build:
      context: ./
      dockerfile: docker/production.Dockerfile
    image: ghcr.io/turtleold/hasta-la-vista-money:main
    restart: on-failure
    volumes:
      - ${LOCATION:-./app_data}:/home/appuser/app
    env_file:
      - .env
    depends_on:
      - db
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/hlvm}
      SECRET_KEY: ${SECRET_KEY:-insecure_key}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      BASE_URL: ${BASE_URL:-http://127.0.0.1:8090}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-http://localhost:8090}
      SENTRY_DSN: ${SENTRY_DSN:-}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT:-dev}
      SENTRY_ENDPOINT: ${SENTRY_ENDPOINT:-}
    user: "appuser"
    working_dir: /home/appuser/app
    command: sh -c "python manage.py migrate && python manage.py collectstatic --noinput && granian --interface asgi config.asgi:application --port ${PORT:-8090} --host 0.0.0.0"

  nginx:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ${CONF_PATH:-./nginx}/nginx.conf:/etc/nginx/nginx.conf
      - ${LOCATION:-./app_data}:/app
    depends_on:
      - hlvm-server
    restart: ${RESTART:-always}

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.31.0.0/16