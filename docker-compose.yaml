name: hlvm

services:
  db:
    container_name: hlvm_db
    image: postgres:latest
    volumes:
      - ${LOCATION:-./app_data}/postgres:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-hlvm}
    ports:
      - "5433:5432"
    restart: always
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: hlvm_rabbitmq
    image: rabbitmq:4-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ${LOCATION:-./app_data}/rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST:-/}
    restart: always
    networks:
      - default
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  taskiq-worker:
    container_name: hlvm_taskiq_worker
    image: ghcr.io/turtleold/hasta-la-vista-money:main
    build:
      context: ./
      dockerfile: docker/production.Dockerfile
    command: .venv/bin/taskiq worker hasta_la_vista_money.taskiq:broker
    volumes:
      - ${LOCATION:-./app_data}/static:/app/static
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/hlvm}
      TASKIQ_RABBITMQ_URL: ${TASKIQ_RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      TASKIQ_BROKER_URL: ${TASKIQ_BROKER_URL:-amqp://guest:guest@rabbitmq:5672/}
      SECRET_KEY: ${SECRET_KEY:-}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - default

  taskiq-scheduler:
    container_name: hlvm_taskiq_scheduler
    image: ghcr.io/turtleold/hasta-la-vista-money:main
    build:
      context: ./
      dockerfile: docker/production.Dockerfile
    command: .venv/bin/taskiq scheduler hasta_la_vista_money.taskiq:scheduler
    volumes:
      - ${LOCATION:-./app_data}/static:/app/static
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/hlvm}
      TASKIQ_RABBITMQ_URL: ${TASKIQ_RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      TASKIQ_BROKER_URL: ${TASKIQ_BROKER_URL:-amqp://guest:guest@rabbitmq:5672/}
      SECRET_KEY: ${SECRET_KEY:-}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - default

  hlvm-server:
    container_name: hlvm_server
    image: ghcr.io/turtleold/hasta-la-vista-money:main
    build:
      context: ./
      dockerfile: docker/production.Dockerfile
    volumes:
      - ${LOCATION:-./app_data}/static:/app/static
    command: sh -c ".venv/bin/python manage.py migrate && .venv/bin/python manage.py collectstatic --noinput --clear && .venv/bin/granian --interface asgi config.asgi:application --port 8001 --host 0.0.0.0"
    expose:
      - "8001"
    env_file:
      - .env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgres://postgres:postgres@db:5432/hlvm}
      TASKIQ_RABBITMQ_URL: ${TASKIQ_RABBITMQ_URL:-amqp://guest:guest@rabbitmq:5672/}
      TASKIQ_BROKER_URL: ${TASKIQ_BROKER_URL:-amqp://guest:guest@rabbitmq:5672/}
      SECRET_KEY: ${SECRET_KEY:-}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS:-localhost,127.0.0.1}
      BASE_URL: ${BASE_URL:-http://127.0.0.1:8090}
      CSRF_TRUSTED_ORIGINS: ${CSRF_TRUSTED_ORIGINS:-}
      SENTRY_DSN: ${SENTRY_DSN:-}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT:-}
      SENTRY_ENDPOINT: ${SENTRY_ENDPOINT:-}
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
    networks:
      - default
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 30s
      timeout: 10s
      retries: 3
  nginx:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ${CONF_PATH:-./nginx}/nginx.conf:/etc/nginx/nginx.conf
      - ${LOCATION:-./app_data}/static:/app/static
    depends_on:
      - hlvm-server
    restart: always
networks:
  default:
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 172.31.0.0/16
